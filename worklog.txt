-Runs on 19/02 seems to imply own ff_farfield function ~<=> meeps own function for closed surface in air. own ff function also faster. This warrants further testing. 
Things to test for. Time? Sim time was 5 sec. Increase? Also, polarization was Ey. Test for different polarisation. Why is far field not equal to close field? Increased resolution needed? Too big of a difference probably. What else could it be.. According to poyntings theorem, should be the same. Ardavan Oskooi claims it shouldn't. Further testing needed. Only used 2 fold symmetry here.

Why on earth does the ff change with different polarisation? Makes no sense.

Run on 20/02. Increase sim time slightly and try other polarisation. 3-fold symmetry used to increase run-time.

21/02. Figure out why Ex and Ey polarisation is different? Should be the same for geometry ff fields? When completed, figure out the needed resolution for converged ff calculations. Seems to be fixed. ff within ~1% for res 40 and 160. Check ff ratio for theta=pi/6 same as analytical answer?

25/02 Does DPML layers affect anything? Do I need to increase it for higher resolution? Increased resolution seems to increase far field flux? Dependent on npts or something else? Future problem? It seems that ff needs all sides of the simulation, check this. Can I only make do with the upper ff field? Is it depending on r? Check for different r. Discuss with Fredrik.

Check DPML layers and npts for higher res. Test MEEPs far field vs my own.

what r should we have? solved - doesnt matter. whole point of the far field.

06/03 Total flux differs for different source pos and sim_time=15. (obviously). Use same total flux (flux from source without geometry) for all simulations? Removes total flux calculation time and same comparison for total flux for all sims. Also, ff field is not covering whole sim cell. So higher source pos might have bigger difference. Adding probe for sim time is not optimal but seems to be required. This furthers investigation on cut-off time for source as well..

13/03 Check if to add some air and extend ff layers and comment on results. That we I can ignore that possibility hopefully. I think prio now is narrow down the simulation space so I can continue on with output and optimization. Check dpmls, ff&air, ff calculation differences. Anything else? If not, move on to optimization hopefully.

14/03 Oh boy, making sim cell a function of pyramid size could bring trouble. First and foremost. If the ratio between sh and ph is constant, is flux ratio the same? Hopefully, otherwise I have some trouble (?). I need to check this. Larger sim cells seems to require longer sim times. Would make sense. waves in air travel at 1v. I want the sim cell as small as possible. total flux is a function of sim cell size and sh, but ff flux isn't. So it makes sense to make sh as small as possible. I just need to check that larger sim cells with ratio consant converges. 

15/03 Find a good time convergence criteria. Measure total flux every sec? Might be very time consuming. Probing seems difficult to find a good balance between different sim specs (?). Different geometries require different sim times. Discuss with Nisse and Torbjörn.

Implement sim for several frequencies. Done.

Try comparing my ff calcs with meeps. Is mine close enough? Also, convergence criteria. Take an upper limit on time or implement some based on total flux? upper time seems simpler. Just need to find it. Check dpml differences for higher resolutions

dpml seems to be ok. upper limit 30 time units possibly? check ff with flux angle? run time seems dependent on height and freq a lot?

<<<<<<< HEAD
for large time to flux diverges. Why? Need to investigate both dpml and absorbers. First of, do we need just thicker dpml/absorbers? Eventually. Why do they only diverge after a large amount of time? t>360 for absorbers and cutoff=10. t>180 cutoff=2 for dpml. TODO: plot
=======
Compare array get metadata integral with my own.. 

Results differ a lot when changing polarization to Ey. Need to redo a lot of runs to get some 1D plots. check how much energy convergence and runnig for fixed time differs. for res 40 seems to be about 2% 

TODO:


	if myIntegration == True:

		for n in range(npts):

			ff=sim.get_farfield(nearfield, mp.Vector3(xPts[n],yPts[n],zPts[n]))
			for k in range(nfreq):
				"Calculate the poynting vector in x,y,z direction"
				P_tot_ff[k] += myPoyntingFlux(ff,nfreq)	
				nfreq = nreq + 6 #to keep track of the correct entries in the ff array

Importance 1: Check how to implement utility function and automate the process
Importance 2: Compare my ff calcs with meep, compare array get metadata integal with my own check how varying sim cell sizes affect output. Can't do. Meep want ff-fields from planar regions.
Importance 3:Time differs from fixed sim time to energy convergence. Done. Go with probe.

--- April
Importance 1: Check and verify ff-calculations as good as possible once and for all
Importance 2: Implement utility function. Look how to optimize outdata, automate the process-chain.

1: closed flux now works. The next, and I guess final test is to compare to some analytical solution for some radiator pattern antenna or something. Tricky to couple the gaussian source to something, but should be solvable.
Fix fibsphere pts, they seem to place on the x-axis on the simulation cell now. LOL!!

Fibsphere seems to place points correctly now. Hard to compare ff-calcs with something. Fredriks SIM could be solution but doesn't work on my comp.


---
Importance:
1a. Check ff-calcs with Fredrik!! 
1b. Implement initial runs with the stochastic radial choosing process.
1c. Do some runs for different parameters to get a feel for the smoothness of the function.
--
1a. Slight errors seem to exist when compared to analytical solutions. Around 4% that doesn't really seem to go away with increased resolution or sample points. Mismatch between fib-sphere pts and continuum or something else? 
1b. Done for 3D.
1c. Runs to be done over Valborg. 
--TODO after Valborg
1a. Do some tests and compare to analytical solutions. Analytical solutions now working for pi/1, /2, ...,/7,pi/8
1b. Find out the divering run. (3,1 mp.Ey for example) not perfect symmetry most likely.
2a. Start write on the rapport.
2b. Find somewhere to run all the simulations.
--Friday 03/05
1. New function to paint pyramid. Check source pos etc. Should be working. Check substrate actually is there, dont know if isInsidexy2 overwrites it? differs quite a lot between results. Very interesting (and dangerous) !

---
Utility function - flera lösare som ska returna max som ev. nästa simuleringspunkter. vi vill även ha en exploration fas, och denna val av punkt så kan vi använda radial choosing.
GÖra simuleringar. plocka ut g(x)=maxf(y,z), projicera ner funktionen. undersöka om vi behöver vidga sökområde. 
Undersöka konvergens i upplösningar. Kan vi köra res 40?
Rapporten ska vara läsbar för klasskompisar etc. Rapporten ska ge en idé om hur metoden fungerar men behöver inte vara underlag nog för att man ska kunna implementera den. 
---28/06
Contents -inte ha med subsubsection i table of contents - klar ?
-ändra cite till cite{asd,afa} - klar ?
-när jag refar till equationer ska jag använda \eqref  - klar ?
-Börja inte stycken med So
-Långa ekvationer kan köra \ldots istället för skriva ..
-aligna maxwells ekvationer - klar ?
30/06
Runs on laptop (2,2,0.1) pyramid. freq center: 2 freq width: 0.5
nfreqs: 10 runtime: 13.7 min
nfreqs: 3 runtime: 6.4 min
nfreqs: 1 runtime: 4.7 min
---
Freqs for DPML run freqs [1.0, 1.2222222222222223, 1.4444444444444444, 1.6666666666666667, 1.8888888888888888, 2.111111111111111, 2.3333333333333335, 2.5555555555555554, 2.7777777777777777, 3.0]
Pyramid (4.5555,1,0.2) f=(1.88,2.11,2.33) enorm skillnad i resultat beroende på om t=15, t=30, t=60. Liten skillnad mellan t=30,t=60, t=120
Inser nu -> conv runs mellan olika tider PRIO. Varierar massivt! Alt. Padding+Substrate Ratio är den stora skurken här!

cutoff=4
1e: 8,8,8,8,8
3e: 10,8,10,8,8
5e:10,10,11,12,16
7e: 20,26,32,40,38
---
cutoff=2
1e:8,10,12,14,18
3e: 40,50,62,66,82
5e: 172,198,279,251,327
------
Ändra namn på rapport?
-Avgränsingar i rapport:
Någorlunda konvergerande parametrar. Något avgränsat. Men ok det som jag har nu.
Kör simuleringar för 2d 3d stora variabelområden.
Kör simuleringar för main, hur snabbt konvergerar main?
Klart. Diskussion.
----
TODO:
Vi ska köra main på 2D. ->
Ändra så height är en funktion av width med vinkel. Skriv klart util function för 2d. -KLAR
Återstår att spara undan..? vad?

 Testa. Undersök fyra fallen Pz, Py: Above, Under.
UTIL Function för 2d fungerar? Dock så kan exploit punkt hamna på simulerad punkt? Koll behövs? Nej diff max ska ta hand om detta.
Plotta konvergens på en axel. Så på x axeln är det par av (ph,pw,sp).

Varying total flux between x and y polarisation, ratio remains the same. Problem for calculating purcell effect?

6 npts give  within 0.1% same result as 1600 npts for analytic case? What the?? Doesn't matter for analytic??!? How do I then present the choice of 1600 npts? Skip?

Skulle antagligen kunna ligga runt npts=400 i nästkommande simuleringar. Verkar som värst skilja ungefär 0.2% från 1600 npts. Beräkningstid ned en tredjedel för (0.94,1.0.01) pyramid. :-( Hur göra i rapporten med npts?

config = {
        "simulate": {
            "resolution": 80,
            "use_fixed_time": False,
            "simulation_time": 10,
            "dpml": 0.1,
            "padding": 0.025,
            "ff_pts": 1600,
            "ff_calc": "Both",
            "ff_cover": False,
            "use_symmetries": True,
            "calculate_flux": True,
            "ff_calculations": True,
            "ff_angle": 6,
            "simulation_ratio": "6/5",
            "substrate_ratio": "1/10"
        },
        "pyramid": {
            "source_position": 0.41,
            "pyramid_height": 7.52,
            "pyramid_width": 8,
            "truncation": 0,
            "source_direction": "mp.Ey",
            "frequency_center": 2,
            "frequency_width": 1.2,
            "number_of_freqs": 6,
            "cutoff": 4
        },
        "result": {}
    }  

freqs [1.4, 1.64, 1.8800000000000001, 2.12, 2.3600000000000003, 2.6000000000000005]
([3.1359e-05, 5.2142e-05, 7.4395e-05, 7.6653e-05, 5.6195e-05, 3.375e-05], [[2.424069354699092e-05, 4.3624440312708394e-05, 6.625900713995495e-05, 7.198775901321774e-05, 5.4308781323440675e-05, 3.279111655718958e-05], [1.701545790884826e-55, 1.9092259081614614e-55, 2.2171245854099003e-55, 2.296043080531505e-55, 2.6158533571646917e-55, 2.7977296218755703e-55]], [[0.773005949, 0.836646855, 0.890637908, 0.939138181, 0.966434404, 0.971588639], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], 222.9)

Field time usage:
        connecting chunks: 187.242 s
            time stepping: 1828.85 s
            communicating: 194.738 s
     Fourier transforming: 343.962 s
          everything else: 271.862 s


Elapsed run time = 13381.1364 s  
        
Det verkar som något är skumt med större pyramider. Eventuellt med källa mot toppen? Ej upplösningsberoende problem ty ~samma resultat för upplösning 30,60,80. Ökade paddingen, substrate ratio och simulation ratio och då fick jag plötsligt division by zero error! 0 Total Flux för alla frekvenser. Eventuellt detta som ställer till det för större pyramider. 

sim ratio 8/5  sub ratio 1/5 res10
([7.7846e-05, 0.010639928, 0.158346027, 0.058081838, 5.2362e-05, 2.037e-05], [[2.5414638767180074e-06, 0.0004866409857552277, 0.012887687979673428, 0.0034375066067931542, 1.594273196573456e-06, 6.409103616855033e-07], [8.625085552942411e-05, 0.00014753078461592065, 0.0002391323740515589, 6.230815342791731e-06, 3.3441034588053457e-06, 3.939952237179612e-06]], [[0.032647328, 0.045737244, 0.081389399, 0.059183847, 0.030447141, 0.031463444], [1.107967725, 0.013865769, 0.001510189, 0.000107276, 0.063865083, 0.193419354]], 1.4)

regular ratios res 10 
([0.000118273, 0.004594234, 0.080928413, 0.033474981, 0.000205595, 6.5476e-05], [[7.921063111530226e-06, 0.000743282517222711, 0.009150683060878302, 0.00352556247563929, 1.9370471007682278e-05, 6.6692022794684456e-06], [2.1198535892219237e-09, 2.9782177464828457e-10, 1.5575536255575837e-10, 1.0976833240151915e-10, 2.0175377408233779e-10, 6.727376863499036e-10]], [[0.066972708, 0.161785951, 0.113071327, 0.105319327, 0.094216644, 0.101857204], [1.7923e-05, 6.5e-08, 2e-09, 3e-09, 9.81e-07, 1.0275e-05]], 5.2)

superpyramid res30 regular ratio npts=100
run 0 finished at t = 8.033333333333333 (482 timesteps)
freqs [1.4, 1.64, 1.8800000000000001, 2.12, 2.3600000000000003, 2.6000000000000005]
([1.1869e-05, 1.9457e-05, 2.6748e-05, 2.6785e-05, 1.9823e-05, 1.2365e-05], [[9.384930100533237e-06, 1.668523207159542e-05, 2.457286196335953e-05, 2.590072512063361e-05, 1.981605989818918e-05, 1.2360995430886145e-05], [1.1617602930410194e-33, 1.5722997649214446e-33, 9.18797890039885e-34, 1.1486214832989784e-33, 1.3444972830853243e-33, 9.821599303184232e-34]], [[0.79070942, 0.857543921, 0.918680349, 0.966986191, 0.999649896, 0.999676137], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], 7.2)

Problem hittat. Tidskonvergens ej visat för pyramid högre än 5. Oklart än det ty jag inte hade fixed angle pyramider vid tidskonvergens tester. Görs nu om. Inte bara det, för frekvenser långt upp på spektrat blir ration klart lägre. -> resultat för frekvenser andra än center sannolikt bogus. Cutoff parameter behövs vara större? Vad annars kan prövas?

Superpeaken beror inte att vi ligger långt ut på väglängdsspektrat. Men vi har visat att den behövde längre tid att konvergera. Men för tidskonvergens för pw [1,8] så verkar 1e-3 duga. Which gives..? 

Slutsats: Det finns anomalier för 1e-3. Så körningar för centerfrekvens verkar vara korrekt. Peaken är en konfiguration som behöver mycket längre tid att släckas ut antagligen. För frekvenser längre ifrån spektrat blir det helt fel dock. Vi har nfreq=6, kanske går att använda 1,2/4,5 istället?  

(5,4.72,0.2) res 40
1e-3
freqs [2.6]
([3.066859085], [[0.25496365241998165], [0.452158035144551]], [[0.083135105], [0.147433587]], 5.9)

Samma körning fast t=120
freqs [2.6]s
([5.976786922], [[0.3778139232597254], [0.9032536651753265]], [[0.063213551], [0.151126965]], 22.4)

Samma körning fast npts= 800 1e-5
([3.066859085], [0.254962874], [0.083134851], 6.6)

Denna körningen ovan är även helt fel mot tidskonvergens körningen?! Så "far out" frekvenser varierar kraftigt huruvida dom behöver 1e-3 eller bra mycket längre tid. Vad göra?

Vi vet:
Probe sensitivity helt urkukad för freq 1.4,2.6. Kolla ifall freq närmare duger eller ifall vi måste köra om referens-simuleringarna för "wider" freqs.
Probe sensitivity 1e-3 svinlugnt för centerfrekvens 2 dock !!.
Innan det: Bekräfta att lägre npts gäller. -> npts verkar inte spela stor roll.

Varför gick jag från cutoff 2 till 4? Oavsett cutoff ska de såklart konvergera till samma sak.

För (5,1,0.1) så räcker det ej med att köra 1e-3 för att konvergera för cutoff=4

----Möte Torbjörn 09/08 17:26
Slutsatsen:
Man får köra simuleringen och kolla max(rbf), x antal bästa simuleringspunkter med högre konvergenskriterier. (I Diskussion kan man föra in att man "startar" om simuleringen här ifrån)

-Dela upp resultatet i faser. Första konvergenstester. Optimeringsfas. Nya konvergenstester. Nya resultat. Stor diskussion.
-------

Är f1 resultaten konvergenta? För center freq? Eventuellt. För =/= center freq, med största sannolikhet inte. 

 [[0.032857969, 0.154404141, 0.188809228, 0.197422411, 0.187575689, 0.
097899619], [0.460675956, 0.009186983, 0.003400014, 0.001943892, 0.004044967, 0.230096799]] (5,4.72,0.2) npts 1600
[[0.033856808, 0.15946082, 0.19015563, 0.194365581, 0.196360836, 0.093074171], [0.498888875, 0.009632108, 0.003525677, 0.002247581, 0.004519884, 0.252993275]], 16.9) (5,4.702,0.2) npts 400
-> npts spelar ingen roll. 4.72 eller 4.702 spelar marginell roll. Frågan: Är de konvergenta? Om ja, hmm, då är nya 1e3,1e5 testerna ej konvergenta för 1e3. Om nej, 1e3 duger ej. 

(2,0.1) verkar ha konvergerat för 1e5. Ej konvergerat för 1e3. Men 8% fel för centerfrekvens och 11% fel för freq 2.6.

(5,0.2) ej konvergerat för 1e5.
resultat från fields:
[1.4, 1.64, 1.88, 2.12, 2.36, 2.6]
([3.4922e-05, 0.049529044, 1.784887416, 3.024301365, 0.180946947, 0.000468604], 
[[2.6387725812525886e-06, 0.00247466087602353, 0.1116768352155538, 0.19895337988
479606, 0.012354391363937178, 2.397275247156283e-05], [1.8060582100577304e-05, 0
.03280696168192678, 1.1315721924598399, 1.9127536109677217, 0.11706855207125187,
 0.00028894553004293346]], [[0.075561897, 0.049963833, 0.062568, 0.065784906, 0.
068276318, 0.051157806], [0.51716918, 0.662378254, 0.633973988, 0.632461313, 0.6
46977216, 0.616609184]], 49.6)





